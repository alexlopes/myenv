#!/bin/bash

#
# Created by Leonardo Comelli  << leonardo (dot) comelli (at) mail.com >>
#
# Last update: 17 Jan 2015

usage() {
    cat >&2 <<EOF

Usage: $0 [ -h <host or ip> [ -u <username> [ -p <password> ]]] [ -s <update interval> ] [ -n <lines> ] <file>

    -h      host or ip of the remote machine
    -u      specify user for authentication
    -p      specify password for authentication
    -s      with -f, sleep for approximately N seconds
            (default 1.0) between iterations.
    -n      output the last K lines, instead of the last 10;
            or use -n +K to output lines starting with the Kth
    <file>  the URL towards the resource to be tracked; needs to be quoted when
            unsafe characters are present

EOF
    exit 1
}

while getopts ":h:u:p:s:n:" arg; do
  case $arg in
     h) host=$OPTARG
        ;;

     u) user=$OPTARG
        ;;

     p) pass=$OPTARG
        ;;

     s) sleep=$OPTARG
        ;;

     n) lines=$OPTARG
        ;;

     *) echo "Syntax error"
        usage
        ;;
  esac
done
shift $((OPTIND-1))

if [ -z "$1" ]; then
   usage
fi

sleep_arg=$([ -z $sleep ] && echo "" || echo ---sleep-interval=$sleep)
lines_arg=$([ -z $lines ] && echo "" || echo --lines=$lines)

`sshpass &>/dev/null`
if [ "$?" != 0 ] || [ -z "$pass" ]; then
  ssh $user@$host -f /usr/bin/tail -F $sleep_arg $lines_arg $1
else
  sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$host -f /usr/bin/tail -F $sleep_arg $lines_arg  $1	
fi